/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gman.modeler.gui.components;

import javax.swing.*;
import javax.swing.table.AbstractTableModel;
import java.util.ArrayList;
import java.util.List;

import com.gman.modeler.api.Modeler;
import com.gman.modeler.api.Queue;
import com.gman.modeler.gui.api.DataListener;
import com.gman.modeler.queues.StatisticsQueueProxy;

/**
 * @author gman
 */
public class QueueViewerComponent extends DataListener {

    private static final int INDEX_WIDTH = 25;
    private static final int NAME_WIDTH = 200;
    private static final int TYPE_WIDTH = 100;
    private static final int NUMBER_WIDTH = 75;

    private final List<Queue> queues = new ArrayList<>();
    private final QueueTableModel tableModel;

    /**
     * Creates new form QueueViewerComponent
     */
    public QueueViewerComponent() {
        tableModel = new QueueTableModel();
        initComponents();
        queueTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        queueTable.getColumnModel().getColumn(0).setPreferredWidth(INDEX_WIDTH);
        queueTable.getColumnModel().getColumn(1).setPreferredWidth(NAME_WIDTH);
        queueTable.getColumnModel().getColumn(2).setPreferredWidth(TYPE_WIDTH);
        queueTable.getColumnModel().getColumn(3).setPreferredWidth(NUMBER_WIDTH);
        queueTable.getColumnModel().getColumn(4).setPreferredWidth(NUMBER_WIDTH);
        queueTable.getColumnModel().getColumn(5).setPreferredWidth(NUMBER_WIDTH);
    }

    @Override
    public String getComponentName() {
        return "Queues";
    }

    @Override
    public void setModeler(Modeler modeler) {
        queues.clear();
        queues.addAll(modeler.getQueues());
        this.tableModel.update();
    }

    private class QueueTableModel extends AbstractTableModel {

        public void update() {
            fireTableDataChanged();
        }

        @Override
        public int getColumnCount() {
            return 6;
        }

        @Override
        public int getRowCount() {
            return queues.size();
        }

        @Override
        public String getColumnName(int column) {
            switch (column) {
                case 0:
                    return "i";
                case 1:
                    return "name";
                case 2:
                    return "type";
                case 3:
                    return "max";
                case 4:
                    return "avg";
                default:
                    return "traffic";
            }
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            final Queue queue = queues.get(rowIndex);

            switch (columnIndex) {
                case 0:
                    return rowIndex;
                case 1:
                    return queue.getName();
                case 2:
                    if (queue instanceof StatisticsQueueProxy) {
                        return ((StatisticsQueueProxy) queue).getUnderlying().getClass().getSimpleName();
                    } else {
                        return queue.getClass().getSimpleName();
                    }
                case 3:
                    if (queue instanceof StatisticsQueueProxy) {
                        return ((StatisticsQueueProxy) queue).getMaxSize();
                    } else {
                        return Double.NaN;
                    }
                case 4:
                    if (queue instanceof StatisticsQueueProxy) {
                        return ((StatisticsQueueProxy) queue).getAvgSize();
                    } else {
                        return Double.NaN;
                    }
                default:
                    if (queue instanceof StatisticsQueueProxy) {
                        return ((StatisticsQueueProxy) queue).getTrafficSize();
                    } else {
                        return Double.NaN;
                    }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        queueScrollPane = new javax.swing.JScrollPane();
        queueTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        queueTable.setModel(tableModel);
        queueScrollPane.setViewportView(queueTable);

        add(queueScrollPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane queueScrollPane;
    private javax.swing.JTable queueTable;
    // End of variables declaration//GEN-END:variables
}
